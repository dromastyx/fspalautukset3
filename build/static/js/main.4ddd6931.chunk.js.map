{"version":3,"sources":["Person.js","services/persons.js","App.js","index.js"],"names":["Person","person","handleClick","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Personform","addPerson","newName","newNum","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","Notification","message","color","notificationStyle","background","borderStyle","borderRadius","padding","fontSize","style","App","useState","persons","setPersons","setNewName","setNewNum","filter","setFilter","notification","setNotification","notificationColor","setNotificationColor","useEffect","personService","initialPersons","personsToShow","toUpperCase","includes","event","target","preventDefault","newPerson","map","p","window","alert","replacedPerson","find","returnedPerson","setTimeout","catch","error","concat","key","deletedPerson","confirm","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ddd6931.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person, handleClick }) => {\r\n  return (\r\n    <li>\r\n      {person.name} {person.number} \r\n      <button onClick={handleClick}>delete</button> \r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Person","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n//https://secret-woodland-07503.herokuapp.com\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteObject = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, deleteObject, update }","import React, { useState, useEffect } from 'react'\r\nimport Person from './Person'\r\nimport personService from './services/persons'\r\n\r\nconst Personform = ({addPerson, newName, newNum, handleNameChange, handleNumberChange}) => {\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n        <div>\r\n          Name: <input value={newName} onChange={handleNameChange}/>\r\n        </div>\r\n        <div>\r\n          Number: <input value={newNum} onChange={handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">Add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nconst Notification = ({ message, color }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  const notificationStyle = {\r\n    color: color,\r\n    background: 'lightgrey',\r\n    borderStyle: 'solid',\r\n    borderRadius: '5',\r\n    padding: '10',\r\n    fontSize: 20\r\n  }\r\n  return (\r\n    <div style={notificationStyle}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNum, setNewNum ] = useState('')\r\n  const [ filter, setFilter ] = useState('')\r\n  const [notification, setNotification] = useState(null)\r\n  const [ notificationColor, setNotificationColor ] = useState('green')\r\n\r\n  useEffect(() => {\r\n    personService\r\n    .getAll()\r\n    .then(initialPersons => {\r\n      setPersons(initialPersons)\r\n    })\r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNum\r\n    }\r\n    if (persons.map(p => p.name).includes(newPerson.name)) {\r\n      window.alert(`${newPerson.name} is already added to phonebook, replace the old number with a new one?`)\r\n      const replacedPerson = persons.find(p => p.name === newPerson.name)\r\n      const id = replacedPerson.id\r\n      personService\r\n      .update(id, newPerson)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.map(p => p.id !== id ? p : returnedPerson))\r\n        setNotificationColor('green')\r\n        setNotification(`Modified ${returnedPerson.name}`)\r\n        setTimeout(() => {\r\n          setNotification(null)\r\n        }, 5000)\r\n      })\r\n      .catch(error => {\r\n        setNotificationColor('red')\r\n        setNotification(`${replacedPerson.name} was already removed from server.`)\r\n        setTimeout(() => {\r\n          setNotification(null)\r\n        }, 5000)\r\n        setPersons(persons.filter(p => p.id !== id))\r\n      })\r\n    } else {\r\n      personService\r\n      .create(newPerson)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.concat(returnedPerson))\r\n        setNewName('')\r\n        setNewNum('')\r\n        setNotificationColor('green')\r\n        setNotification(`Added ${returnedPerson.name}`)\r\n        setTimeout(() => {\r\n          setNotification(null)\r\n        }, 5000)\r\n      })\r\n      .catch(error => {\r\n        setNotificationColor('red')\r\n        setNotification(`${error.response.data.error}`)\r\n        setTimeout(() => {\r\n          setNotification(null)\r\n        }, 5000)\r\n      })\r\n    }\r\n  }\r\n\r\n  const deletePerson = (id) => {\r\n    const deletedPerson = persons.find(p => p.id === id)\r\n    if (window.confirm(`Want to delete ${deletedPerson.name}?`)) {\r\n      personService\r\n     .deleteObject(id)\r\n     .then(() => {\r\n       setPersons(persons.filter(p => p.id !== id))\r\n       setNotificationColor('green')\r\n       setNotification(`Deleted ${deletedPerson.name}`)\r\n        setTimeout(() => {\r\n          setNotification(null)\r\n        }, 5000)\r\n     })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    //console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    //console.log(event.target.value)\r\n    setNewNum(event.target.value)\r\n  }\r\n\r\n  const handlePersonsToShow = (event) => {\r\n    //console.log(event.target.value)\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const personsToShow = persons.filter(person => \r\n    person.name.toUpperCase().includes(filter.toUpperCase()))\r\n \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notification} color={notificationColor} />\r\n        <div>\r\n            Filter shown with <input onChange={handlePersonsToShow}/>\r\n        </div>\r\n      <h2>Add a new</h2>\r\n      <Personform addPerson={addPerson} newName={newName} newNum={newNum}\r\n        handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <ul>\r\n        {personsToShow.map(person => \r\n          <Person key={person.id} person={person} handleClick=\r\n          {() => deletePerson(person.id)}/>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}